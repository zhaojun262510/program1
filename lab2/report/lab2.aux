\relax 
\@writefile{toc}{\contentsline {section}{\numberline {1}实验要求}{2}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}学习Shell和Vim的使用}{2}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2}完成4个课堂练习与20个与Shell和Vim有关的实例}{2}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {2}实验内容}{2}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Shell的学习}{2}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.1}Shell 是一种命令行解释器和脚本编写环境，主要用于与操作系统的内核进行交互。它作为用户与操作系统之间的接口，允许用户输入命令并执行系统功能。Shell 可以理解并执行用户输入的命令，将它们传递给操作系统的内核，然后将结果返回给用户。\\Shell 通常以文本的形式运行，可以通过命令行终端访问。在 UNIX 和类 UNIX 系统（如 Linux 和 macOS）中，shell 是一个非常重要的工具，它允许用户执行各种系统管理任务、文件操作、网络配置等。\\常见的Shell类型有Bash、Zsh、Fish、Csh、Ksh。}{2}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.2}Shell的主要功能：\\1.命令解释: 接受用户输入的命令并传递给操作系统执行。\\2.脚本编写: 通过编写 Shell 脚本，用户可以自动化一系列操作，比如文件管理、系统监控、任务调度等。\\3.变量管理: Shell 允许用户创建和使用变量，以便在脚本中存储和操作数据。\\4.管道与重定向: 通过管道将一个命令的输出作为另一个命令的输入，或者通过重定向 控制输入输出。\\5.进程管理: Shell 可以启动、停止、后台运行进程，并管理系统资源的分配。}{2}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.3}Bash的核心功能：\\变量和参数: 在 Bash 中，变量可以通过 = 进行赋值，使用时通过 \$ 符号引用。\\Bash 支持条件语句和循环，如if-else，for循环等。\\函数: 可以在 Bash 中定义和调用函数，以实现代码的复用和模块化。\\管道：通过 \textbar 将一个命令的输出传递给另一个命令。\\重定向：将命令输出重定向到文件。}{2}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Vim的学习}{3}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.1}Vim（Vi Improved）是一个功能强大、广泛使用的文本编辑器，特别在程序员和系统管理员中很受欢迎。它是经典编辑器 Vi 的增强版，支持多种功能如语法高亮、插件扩展、脚本编写等。}{3}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.2}Vim的特点：\\1.模式编辑:正常模式（Normal mode）：用于浏览和编辑文件。按键直接影响光标移动和文本操作。插入模式（Insert mode）：用于插入文本，类似于其他常见文本编辑器的编辑模式。可视模式（Visual mode）：选择文本块进行操作（如复制、删除）。命令模式（Command mode）：通过键入 : 来输入各种命令（如保存、退出等）。 \\2.高效的键盘操作: Vim 强调通过键盘进行操作，减少对鼠标的依赖，从而提高编辑效率。每个按键或按键组合都对应着一个特定的操作。\\3.强大的插件支持: Vim 有丰富的插件生态，可以通过插件扩展各种功能，如代码补全、文件树导航、Git 集成等。\\4.多平台支持: Vim 可以运行在不同的操作系统上，如 Linux、macOS 和 Windows，因此它被广泛用于跨平台的文本编辑。\\5.轻量级与可定制性: Vim 的配置非常灵活，可以通过 .vimrc 文件定制编辑器的行为、外观和功能。}{3}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {3}实验中遇到的问题与解决方法}{4}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}在虚拟机中，从windows复制到linux中的脚本无法正常运行，错误提示： bash: ./1.sh: /bin/bash\^M: bad interpreter: No such file or directory}{4}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {4}实例练习}{4}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}查看历史命令}{4}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}查看命令所在文件路径}{5}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3}安装tldr命令}{5}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.4}用tldr代替man}{6}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.5}编写脚本函数}{6}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.6}使用脚本中的函数}{7}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.7}在文件中漫游}{7}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.8}利用重定向复制文本内容}{8}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.9}重定向控制输入输出}{8}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.10}查看ls所有文件的最后一行}{9}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.11}更好的查看目录结构}{9}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.12}编写hello world脚本}{9}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.13}运行脚本}{10}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.14}实现猜数字脚本}{11}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.15}运行猜数字小游戏}{11}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.16}vim显示buffer并切换}{11}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.17}vim显示多个窗口}{12}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.18}vim实现tabs}{13}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.19}在vim中打开其他文件}{13}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.20}在vim中搜索文件内容}{14}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {5}实验收获与感悟}{14}{}\protected@file@percent }
\gdef \@abspage@last{14}
