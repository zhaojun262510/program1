\relax 
\@writefile{toc}{\contentsline {section}{\numberline {1}实验要求}{2}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}学习命令行环境的任务控制，终端多路复用，别名，配置文件，远端设备}{2}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2}学习Python的基础入门及其视觉应用}{2}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {1.3}完成4个课堂练习与20个与命令行环境和Python有关的实例}{2}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {2}实验内容}{2}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}命令行环境的学习}{2}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.1}任务控制是指在命令行环境下管理和控制任务的执行状态（前台、后台、暂停等）。常用的任务控制命令有：\\Ctrl + C: 终止当前前台任务。\\Ctrl + Z: 暂停当前前台任务并将其放到后台。\\jobs: 列出当前所有的后台任务。\\fg [任务号]: 将后台任务恢复到前台执行。\\bg [任务号]: 在后台继续执行暂停的任务。\\kill [任务号或PID]: 终止指定的后台任务或进程。}{2}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.2}终端多路复用是指在一个终端中管理多个会话或窗口，允许用户在单一终端窗口中并行运行多个会话。最常用的多路复用工具包括tmux和screen。\\tmux new -s <session-name>: 创建一个新的 tmux 会话。\\Ctrl + b + d: 分离当前 tmux 会话（后台运行）。\\tmux ls: 列出所有 tmux 会话。\\tmux attach -t <session-name>: 恢复连接到指定的 tmux 会话。\\多路复用非常适合在远程会话中保持任务持续运行，即使断开连接，任务依然在后台执行。}{2}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.3}别名是为命令设置的快捷方式，用于简化复杂或常用命令的输入。可以通过在 shell 配置文件（如 ~/.bashrc 或 ~/.zshrc）中定义别名。\\配置文件用于设置命令行环境的个性化和自动化配置。常见的配置文件包括：\\~/.bashrc: Bash shell 的配置文件，通常用于定义别名、环境变量和自定义函数。\\~/.zshrc: Zsh shell 的配置文件，类似于 .bashrc。\\~/.bash\_profile 或 ~/.bash\_login: 在用户登录时执行的配置文件，通常用于设置环境变量。\\~/.vimrc: Vim 文本编辑器的配置文件，用于自定义编辑器的行为和外观。}{2}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Python基础入门及计算机视觉应用}{3}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.1}Python 是一种高级的、解释型、面向对象的编程语言，由 Guido van Rossum 于 1991 年发布。由于其语法简洁、可读性强和庞大的标准库，Python 已成为应用广泛的编程语言，特别是在数据分析、人工智能、Web 开发、自动化等领域。}{3}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.2}python的特点：\\1.简洁易学：Python 语法简单，代码可读性强。它允许开发者用更少的代码完成同样的任务，因此非常适合初学者学习编程。\\2.跨平台：Python 是跨平台的，支持 Windows、MacOS、Linux 等操作系统，Python 代码在不同的操作系统上几乎不需要更改。\\3.解释型语言：Python 是解释型语言，代码可以逐行运行，无需编译，方便调试和快速开发。\\4.丰富的库和社区支持：Python 拥有丰富的标准库和第三方库，几乎可以实现任何应用场景的需求。比如科学计算的 NumPy 和 SciPy，数据分析的 Pandas，机器学习的 TensorFlow，Web 开发的 Django 等。\\5.强大的集成性：Python 能够轻松与其他语言（如 C、C++、Java）进行集成，支持扩展和调用外部库，适合多种应用开发。}{3}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.3}Python 在计算机视觉（Computer Vision, CV）领域具有广泛的应用，得益于其简洁的语法、强大的库支持以及活跃的社区。计算机视觉旨在让计算机能够“看见”并“理解”图像或视频内容，从而执行各种任务，如图像识别、对象检测、图像分割等。常用的Python计算机视觉库有OpenCV，TensorFlow和PyTorch等。}{3}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {3}实例练习}{4}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}编写捕获SIGINT信号的py脚本}{4}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}任务控制}{4}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}创建别名}{4}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4}配置vimrc文件}{5}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.5}python计算日期}{5}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.6}斐波那契数列}{6}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.7}乘法口诀表}{6}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.8}停顿输出}{7}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.9}输出素数}{7}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.10}反顺序打印字符}{8}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.11}选择排序}{8}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.12}实现简单GUI程序}{9}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.13}在GUI应用中实现按钮等}{10}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.14}求最大公约数}{11}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.15}判断回文字符串}{11}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.16}列表去重}{12}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.17}统计字符出现次数}{12}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.18}冒泡排序}{12}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.19}合并两个有序列表}{13}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.20}连续子数组的最大和}{13}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {4}实验收获与感悟}{14}{}\protected@file@percent }
\gdef \@abspage@last{14}
